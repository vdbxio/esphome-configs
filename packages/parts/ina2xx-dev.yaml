# INA2XX 24.06-dev for PwrTool 500
# Voidbox Industries & Chloe Madison
# VDBX.io / @clomads
# CC-BY-SA 4.0
# 
# ina2xx: !include  {file: "packages/parts/ina2xx.yaml", vars: {address: 0x40}}


globals:
  - id: offset_power
    type: float
    restore_value: yes
    initial_value: '0.0'
  - id: offset_current
    type: float
    restore_value: yes
    initial_value: '0.0'


esphome:
  on_boot:
  - priority: -200.0
    then:
      - sensor.template.publish:
          id: offsetI_int
          state: !lambda 'return id(offset_current);'
      - sensor.template.publish:
          id: offsetP_int
          state: !lambda 'return id(offset_power);'



switch:
  - platform: template
    name: "Invert"
    id: invert
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    entity_category: config

button:
  - platform: template
    name: Set Zero Offset
    id: zero_offset
    entity_category: config
    icon: "mdi:circle"
    on_press:
      - logger.log: "Setting Offset"
      - sensor.template.publish:
          id: offsetI_int
          state: !lambda 'return id(rawI).state;'
      - sensor.template.publish:
          id: offsetP_int
          state: !lambda 'return id(rawP).state;'
      - logger.log:
          format: "Current - %.1f / Power - %.1f"
          args: [ 'id(offset_current)', 'id(offset_power)' ]
  - platform: template
    name: Clear Zero Offset
    id: clear_offset
    entity_category: config
    icon: "mdi:circle"
    on_press:
      - logger.log: "Clearing Offset"
      - sensor.template.publish:
          id: offsetI_int
          state: 0
      - sensor.template.publish:
          id: offsetP_int
          state: 0
      - logger.log:
          format: "Current - %.1f / Power - %.1f"
          args: [ 'id(offset_current)', 'id(offset_power)' ]





sensor:
  - platform: ina2xx_i2c
    id: ina23x
    address: ${address} # default: 0x40
    shunt_resistance: 0.00015 ohm
    model: INA238
    max_current: 500 A
    adc_range: 0
    adc_time: 4120 us
    adc_averaging: 128
    update_interval: 100ms
    # For 228/229:
    # energy: "Energy - Raw"
    # energy_joules: "Energy Joules - Raw"
    # charge: "Charge - Raw"
    # charge_coulombs: "Charge Coul - Raw"
    shunt_voltage:
      name: "Voltage - Shunt"
      device_class: "voltage"
      unit_of_measurement: "mV"
      accuracy_decimals: 3
      disabled_by_default: True
    bus_voltage:
      name: "Voltage - Bus"
      id: rawV
      accuracy_decimals: 3
    current:
      name: "Current - Raw"
      id: rawI
      accuracy_decimals: 2
      filters:
      - lambda: !lambda |-
          if (id(invert).state) return {x * -1};
          return x;
      - lambda: !lambda 'return x - id(offset_current);'
      

    power:
      name: "Power - Raw"
      id: rawP
      accuracy_decimals: 2
      filters:
      - lambda: !lambda |-
          if (id(invert).state) return {x * -1};
          return x;
      - lambda: !lambda 'return x - id(offset_power);'
    temperature:
      name: "Temperature - Shunt"
      accuracy_decimals: 2
  - platform: total_daily_energy
    name: "Energy - Daily"
    power_id: rawP
    accuracy_decimals: 2
  - platform: template
    id: offsetI_int
    name: "Current - Offset"
    accuracy_decimals: 2
    device_class: "current"
    unit_of_measurement: "A"
    entity_category: diagnostic
    on_value:
      - logger.log:
          format: "Current Offset set to %.1f"
          args: [ 'id(offsetI_int).state' ]
      - globals.set:
          id: offset_current
          value: !lambda 'return x;'
  - platform: template
    id: offsetP_int
    name: "Power - Offset"
    accuracy_decimals: 2
    device_class: "power"
    unit_of_measurement: "W"
    entity_category: diagnostic
    on_value:
      - logger.log:
          format: "Power Offset set to %.1f"
          args: [ 'id(offsetP_int).state' ]
      - globals.set:
          id: offset_power
          value: !lambda 'return x;'















